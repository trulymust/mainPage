{"0": {
    "doc": "Welcome to Jekyll!",
    "title": "Welcome to Jekyll!",
    "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-title.MARKUP . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: . def print_hi(name) puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk. ",
    "url": "http://localhost:4000/docs/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2022-05-28-welcome-to-jekyll.html",
    "relUrl": "/docs/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2022-05-28-welcome-to-jekyll.html"
  },"1": {
    "doc": "Welcome to Jekyll!",
    "title": "Welcome to Jekyll!",
    "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-title.MARKUP . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: . def print_hi(name) puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk. ",
    "url": "http://localhost:4000/docs/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E5%A4%A9/2022-05-28-welcome-to-jekyll.html",
    "relUrl": "/docs/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E5%A4%A9/2022-05-28-welcome-to-jekyll.html"
  },"2": {
    "doc": "Android学习笔记",
    "title": "Android学习笔记",
    "content": "To make it as esy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. ",
    "url": "http://localhost:4000/docs/Android",
    "relUrl": "/docs/Android"
  },"3": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll . ",
    "url": "http://localhost:4000/about/",
    "relUrl": "/about/"
  },"4": {
    "doc": "第一天",
    "title": "Android学习笔记",
    "content": "To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. ",
    "url": "http://localhost:4000/docs/android/one#android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0",
    "relUrl": "/docs/android/one#android学习笔记"
  },"5": {
    "doc": "第一天",
    "title": "第一天",
    "content": " ",
    "url": "http://localhost:4000/docs/android/one",
    "relUrl": "/docs/android/one"
  }
}
